diff --git a/dlls/winex11.drv/window.c b/dlls/winex11.drv/window.c
index 1234567..abcdef0 100644
--- a/dlls/winex11.drv/window.c
+++ b/dlls/winex11.drv/window.c
@@ -40,6 +40,8 @@
 #include "wine/debug.h"
 #include "wine/server.h"
 
+#define AUTO_RESOLUTION_DETECTION 1
+
 WINE_DEFAULT_DEBUG_CHANNEL(x11drv);
 
 /*-----------------------------------------------------------------------------
@@ -2345,6 +2347,44 @@ void X11DRV_WindowPosChanged( HWND hwnd, HWND insert_after, UINT swp_flags,
         }
     }
 
+#ifdef AUTO_RESOLUTION_DETECTION
+    /* Automatic resolution detection and correction for Wine windows */
+    if (data && data->whole_window && !is_virtual_desktop())
+    {
+        RECT window_rect;
+        int scr_width, scr_height;
+        Display *display = thread_display();
+        int screen = DefaultScreen(display);
+        
+        /* Get the current screen resolution */
+        scr_width = DisplayWidth(display, screen);
+        scr_height = DisplayHeight(display, screen);
+        
+        /* Check for common low-resolution settings that should be upgraded */
+        GetWindowRect(hwnd, &window_rect);
+        int win_width = window_rect.right - window_rect.left;
+        int win_height = window_rect.bottom - window_rect.top;
+        
+        /* Look for 800x600 or similarly small windows on larger screens */
+        if ((win_width <= 800 && win_height <= 600) && 
+            (scr_width >= 1024 && scr_height >= 768))
+        {
+            WCHAR class_name[256];
+            GetClassNameW(hwnd, class_name, ARRAY_SIZE(class_name));
+            
+            /* Only target game windows or main application windows */
+            if (GetWindow(hwnd, GW_OWNER) == NULL && 
+                (wcsstr(class_name, L"Wine") || GetWindowLongW(hwnd, GWL_STYLE) & WS_CAPTION))
+            {
+                TRACE("Auto-adjusting small window from %dx%d to match screen better\n", 
+                      win_width, win_height);
+                SetWindowPos(hwnd, 0, 0, 0, scr_width * 0.8, scr_height * 0.8, 
+                             SWP_NOMOVE | SWP_NOZORDER | SWP_NOACTIVATE);
+            }
+        }
+    }
+#endif
+
     release_win_data( data );
 }
