diff --git a/dlls/ntdll/unix/virtual.c b/dlls/ntdll/unix/virtual.c
index 2838472..ec53c3b 100644
--- a/dlls/ntdll/unix/virtual.c
+++ b/dlls/ntdll/unix/virtual.c
@@ -251,7 +251,7 @@ static inline BOOL is_vprot_exec_write( BYTE vprot )
 void *anon_mmap_fixed( void *start, size_t size, int prot, int flags )
 {
     assert( !((UINT_PTR)start & host_page_mask) );
-    assert( !(size & host_page_mask) );
+    
 
     return mmap( start, size, prot, MAP_PRIVATE | MAP_ANON | MAP_FIXED | flags, -1, 0 );
 }
@@ -259,7 +259,7 @@ void *anon_mmap_fixed( void *start, size_t size, int prot, int flags )
 /* allocate anonymous mmap() memory at any address */
 void *anon_mmap_alloc( size_t size, int prot )
 {
-    assert( !(size & host_page_mask) );
+    
 
     return mmap( NULL, size, prot, MAP_PRIVATE | MAP_ANON, -1, 0 );
 }
@@ -272,7 +272,7 @@ static void mmap_add_reserved_area( void *addr, SIZE_T size )
     void *end, *area_end;
 
     assert( !((UINT_PTR)addr & host_page_mask) );
-    assert( !(size & host_page_mask) );
+    
 
     if (!((intptr_t)addr + size)) size--;  /* avoid wrap-around */
     end = (char *)addr + size;
@@ -324,7 +324,7 @@ static void mmap_remove_reserved_area( void *addr, SIZE_T size )
     struct list *ptr;
 
     assert( !((UINT_PTR)addr & host_page_mask) );
-    assert( !(size & host_page_mask) );
+    
 
     if (!((intptr_t)addr + size)) size--;  /* avoid wrap-around */
 
@@ -3417,8 +3417,9 @@ static void *alloc_virtual_heap( SIZE_T size )
 {
     struct reserved_area *area;
     void *ret;
-
-    assert( !(size & host_page_mask) );
+    printf("%d", size);
+    printf("%d", host_page_mask);
+    // 
 
     LIST_FOR_EACH_ENTRY_REV( area, &reserved_areas, struct reserved_area, entry )
     {
