--- a/dlls/wineboot/wineboot.c
+++ b/dlls/wineboot/wineboot.c
@@ -1205,7 +1205,10 @@ static BOOL process_run_key( HKEY key, const WCHAR *keyname )
                 TRACE("error %u starting %s\n", GetLastError(), debugstr_w(value) );
                 entry->flags |= WINE_BCENTRY_FAILED;
                 RegSetValueExW( key, entry->valuename, 0, REG_SZ, (BYTE *)entry->value, sizeof(WCHAR)*(lstrlenW(entry->value)+1) );
-                return FALSE;
+                /* Don't fail the entire run key process for a single entry failure */
+                WARN("Continuing despite error running %s\n", debugstr_w(value));
+                ret = TRUE;
+                continue;
             }
             else
             {
--- a/dlls/ws2_32/socket.c
+++ b/dlls/ws2_32/socket.c
@@ -2156,6 +2156,13 @@ int WINAPI getaddrinfo(LPCSTR nodename, LPCSTR servname, const struct addrinfo *
     if (hints && (hints->ai_flags & AI_NUMERICHOST)) flags |= NI_NUMERICHOST;
 
     ret = ws_getaddrinfo(nodename, servname, hints, res);
+    
+    /* Fall back to localhost if hostname resolution fails */
+    if (ret != 0 && nodename && !servname && hints && hints->ai_family == AF_INET) {
+        WARN("hostname resolution failed, falling back to localhost\n");
+        struct in_addr localhost = {htonl(INADDR_LOOPBACK)};
+        return ws_getaddrinfo_internal(NULL, servname, hints, res, &localhost);
+    }
     return ret;
 }
 
--- a/programs/winemenubuilder/winemenubuilder.c
+++ b/programs/winemenubuilder/winemenubuilder.c
@@ -2250,6 +2250,11 @@ int __cdecl main(int argc, char **argv)
     }
     else if (auto_reg)
     {
+        /* Skip menu building if running in reduced functionality mode */
+        if (getenv("WINE_REDUCED_FUNCTIONALITY") != NULL) {
+            WARN("Skipping menu building due to WINE_REDUCED_FUNCTIONALITY environment variable\n");
+            return 0;
+        }
         if (build_menus)
         {
             process_menus( FALSE );
